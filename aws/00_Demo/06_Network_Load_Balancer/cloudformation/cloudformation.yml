AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template for a simple EC2 instance with TCP server'

Parameters:
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-6.1-x86_64'
    Description: 'Latest Amazon Linux 2023 AMI from SSM Parameter Store'

Resources:
  DemoTCPServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref LatestAmiId
      SecurityGroups:
        - !Ref ServerSecurityGroup
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-tcp-server"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          
          # 1. Install Node.js 20
          curl --silent --location https://rpm.nodesource.com/setup_20.x | bash -
          dnf -y install nodejs
          
          # 2. Download zip file
          mkdir -p /home/ec2-user/downloads
          cd /home/ec2-user/downloads
          curl -L -o server.zip https://public.rwlecture.com/aws_basic/nlb/demo-tcp-server.zip
          
          # 3. Unzip file in directory server
          mkdir -p /home/ec2-user/server
          unzip -o server.zip -d /home/ec2-user/server
          
          # Create log file with proper permissions
          touch /home/ec2-user/server.log
          chown ec2-user:ec2-user /home/ec2-user/server.log
          chmod 644 /home/ec2-user/server.log
          
          # 4. Create service file and start service
          cat > /etc/systemd/system/tcp-server.service << 'EOL'
          [Unit]
          Description=Demo TCP Server
          After=network.target

          [Service]
          Type=simple
          User=ec2-user
          WorkingDirectory=/home/ec2-user/server
          ExecStart=/usr/bin/node /home/ec2-user/server/src/server.js
          Restart=on-failure
          StandardOutput=append:/home/ec2-user/server.log
          StandardError=append:/home/ec2-user/server.log

          [Install]
          WantedBy=multi-user.target
          EOL
          
          # Enable and start the service
          systemctl enable tcp-server.service
          systemctl start tcp-server.service

  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH and TCP server access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0  # For SSH access (restrict in production)
        - IpProtocol: tcp
          FromPort: 3000  # Assuming the server runs on port 3000, modify as needed
          ToPort: 3000
          CidrIp: 0.0.0.0/0  # Adjust based on your security requirements

Outputs:
  InstanceId:
    Description: ID of the EC2 instance
    Value: !Ref DemoTCPServerInstance
  PublicIP:
    Description: Public IP address of the instance
    Value: !GetAtt DemoTCPServerInstance.PublicIp
  PublicDNS:
    Description: Public DNS name of the instance
    Value: !GetAtt DemoTCPServerInstance.PublicDnsName
